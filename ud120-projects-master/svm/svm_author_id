#!/usr/bin/python

""" 
    This is the code to accompany the Lesson 2 (SVM) mini-project.

    Use a SVM to identify emails from the Enron corpus by their authors:    
    Sara has label 0
    Chris has label 1
"""
    
import sys
from time import time
sys.path.append("../tools/")
from email_preprocess import preprocess


### features_train and features_test are the features for the training
### and testing datasets, respectively
### labels_train and labels_test are the corresponding item labels
features_train, features_test, labels_train, labels_test = preprocess()




#########################################################
### your code goes here ###

""" import """
from sklearn.svm import SVC

""" create classifier (linear kernel) """
clf = SVC(kernel="linear")

### make the dataset smaller to speed up
features_train = features_train[:len(features_train)/100] 
labels_train = labels_train[:len(labels_train)/100] 

""" fit / train data """
t0 = time()
clf.fit(features_train, labels_train)
print "training time:", round(time()-t0, 3), "s"


""" make predictions """
t0 = time()
pred = clf.predict(features_test)
print "training time:", round(time()-t0, 3), "s"
print(pred)

""" calculate accuracy """
from sklearn.metrics import accuracy_score
accuracy = accuracy_score(pred, labels_test)
print accuracy
print clf.score(features_test, labels_test)
#########################################################

""" Results original dataset: 
    Predictions:
        no. of Chris training emails: 7936
        no. of Sara training emails: 7884
    Accuracy:
        0.984072810011
        0.984072810011  
    training time for classifier:
        training time: 139.616 s

    training time for prediction:
        training time: 14.554 s
        
    Results with smaller dataset:
        no. of Chris training emails: 7936
        no. of Sara training emails: 7884
        training time: 0.09 s
        training time: 0.871 s
        0.884527872582
        0.884527872582
"""
